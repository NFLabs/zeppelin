/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

installApp.destinationDir = project.file("$rootProject.projectDir/dist/$applicationName-$version/$applicationName-$version")
distZip.destinationDir = project.file("$rootProject.projectDir/dist/$applicationName-$version")
distTar.destinationDir = project.file("$rootProject.projectDir/dist/$applicationName-$version")


/** Distribution tasks */
task copyLicense {
  def docs = file("$buildDir/tmpDist")
  def to = new File("$rootProject.projectDir/LICENSE").text
  outputs.dir docs
  doLast {
    docs.mkdirs()
    new File(docs, "LICENSE").write(to)
  }
}

task copyReadme {
  def docs = file("$buildDir/tmpDist")
  def to = new File("$rootProject.projectDir/README.md").text
  outputs.dir docs
  doLast {
    docs.mkdirs()
    new File(docs, "README.md").write(to)
  }
}

task copyWeb {
  def webTemplate = file("$rootProject.projectDir/zeppelin-web/build/libs")
  def web = file("$buildDir/web")
          
  outputs.dir web
  doLast {
    web.mkdirs()
    ant.copy(todir: web) {
      fileset(dir: webTemplate)
    }
  }
}

task copyInterpretor {
  def interpretorsTemplate = file("$rootProject.projectDir/interpreter")
  def interpretors = file("$buildDir/interpreter")
      
  outputs.dir interpretors
  doLast {
    interpretors.mkdirs()
    ant.copy(todir: interpretors) {
      fileset(dir: interpretorsTemplate)
    }
  }
}

task copyConfiguration {
  def conf = file("$buildDir/conf")
  def confTemplate = file("$rootProject.projectDir/conf")
  outputs.dir conf
  doLast {
    conf.mkdirs()
    ant.copy(todir: conf) {
      fileset(dir: confTemplate)
    }
  }
}

task copyBin {
  def bin = file("$buildDir/bin")
  def binTemplate = file("$rootProject.projectDir/bin")
  outputs.dir bin
  doLast {
    bin.mkdirs()
    ant.copy(todir: bin) {
      fileset(dir: binTemplate)
    }
  }
}

applicationDistribution.from(copyLicense) {
  into ""
}

applicationDistribution.from(copyReadme) {
  into ""
}

applicationDistribution.from(copyWeb) {
  into "lib"
}


applicationDistribution.from(copyInterpretor) {
  into "interpreter"
}

applicationDistribution.from(copyConfiguration) {
  into "conf"
}

applicationDistribution.from(copyBin) {
  into "bin"
  fileMode = 0755 
}
//project.delete()

installApp {
  doLast {
    //project.delete("$rootProject.projectDir/dist/$applicationName-$version/$applicationName-$version/bin/zeppelin")
    project.delete("$rootProject.projectDir/dist/$applicationName-$version/$applicationName-$version/bin/zeppelin.bat")
  }
}
